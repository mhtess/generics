// webppl FBT-hierarchicalPrior.wppl --require-js ./priorutils.js

var foreach = function(lst, fn) {
    var foreach_ = function(i) {
        if (i < lst.length) {
            fn(lst[i]);
            foreach_(i + 1);
        }
    };
    foreach_(0);
};

var marginalize = function(myERP, index){
  Enumerate(function(){
    var x = sample(myERP)
    return x[index]
  })
}


var shape_alpha = function(gamma,delta){return gamma * delta}
var shape_beta = function(gamma,delta){return (1-gamma) * delta}




var data = priorutils.readCSV("../../data/asymmetry/asymmetry-prior-2-trials.csv").data

var df = map(
	function(lst){
		return _.object(_.zip(data[0],lst))
	},
	data.slice(1))


var conditions = _.uniq(_.pluck(df,"stim_type"))

var avoidEnds = function(response){
	return response==0 ? 0.01 : response==1 ? 0.99 : response
}

var dataAnalysisModel = function(){

	foreach(conditions,
		function(c){

			var gamma0 = uniform(0,1) 
			var delta0 = uniform(0,10)
			var gamma1 = uniform(0,1)
			var delta1 = uniform(0,10)
			var conditionData = filter(function(d){
								return (d["stim_type"]==c)
							},df)

			foreach(conditionData,
				function(d){
					var scr0 = betaERP.score([
									shape_alpha(gamma0,delta0),
									shape_beta(gamma0,delta0)
									], avoidEnds(d["response0"]))
					var scr1 = betaERP.score([
									shape_alpha(gamma1,delta1),
									shape_beta(gamma1,delta1)
									], avoidEnds(d["response1"]))
					factor(scr0+scr1)
				}
			)

			query.add(c, [gamma0, delta0, gamma1, delta1])

		}
	)

	return query
}


// var resultsERP = IncrementalMH(dataAnalysisModel, 100)

// var unwrapERP = function(myERP, condition){
// 	console.log(condition + " gamma0 = " + expectation(marginalize(marginalize(myERP, condition),0)))
// 	console.log(condition + " delta0 = " + expectation(marginalize(marginalize(myERP, condition),1)))
// 	console.log(condition + " gamma1 = " + expectation(marginalize(marginalize(myERP, condition),2)))
// 	console.log(condition + " delta1 = " + expectation(marginalize(marginalize(myERP, condition),3)))
// }

// map(function(c){unwrapERP(resultsERP, c)}, conditions)

// console.log("done.")









