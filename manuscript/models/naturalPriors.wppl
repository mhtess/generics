// time webppl naturalPriors.wppl --require-js ./naturalUtils.js --require-wppl ./naturalPrevalence.wppl --require-wppl ./naturalUtils.wppl

var priorModel = function(){

	var phi = uniform(0,1)

	foreach(properties, function(p){

		var propertyData = subset(df_prior, "Property", p)
		var responseData = _.pluck(propertyData, "prevalence")

		var prob_hasF = beta(1,1)

		var scr1 = reduce(function(d, memo) {
							// console.log(d)
						    return memo + bernoulliERP.score([prob_hasF], d!=0)
							}, 0, responseData)
		factor(scr1)


		var gamma = uniform(0,1)
		var delta = uniform(0,50)

		var discreteBetaProbs = discretizeBeta(gamma, delta)
		var discreteBetaProbsNormalized = map(function(x){return x/sum(discreteBetaProbs)}, discreteBetaProbs)

		var scr2 = reduce(function(d, memo) {
							var x = d==0? 0 :  
								Math.log(
									(phi*guessing) + 
									((1-phi) * discreteBetaProbsNormalized[bins.indexOf(alignPrevalence(d))])
									)
						    return memo + x
							}, 0, responseData)

		factor(scr2)


		var discretized_prevalence = discretizedPriorModel(prob_hasF, gamma, delta)
		query.add(p, discretized_prevalence)

	})

	return query
}
