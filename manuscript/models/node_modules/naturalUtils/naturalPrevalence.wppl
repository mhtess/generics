// time webppl naturalPrevalence.wppl --require-js ./naturalUtils.js --require-wppl ./naturalUtils.wppl
var fpath = "/Users/mht/Documents/research/generics/manuscript/data/"
var Priordata = naturalUtils.readCSV(fpath+"real-kinds-prior-2-trials-formatted.csv").data
var Truthdata = naturalUtils.readCSV(fpath+"real-kinds-truth-1-trials-formatted.csv").data

// babyparse adds an extra line at the end.
var df_prior = dataFrame(Priordata.slice(0,Priordata.length-1))
var df_truth = dataFrame(Truthdata.slice(0,Truthdata.length-1))

var properties = _.uniq(_.pluck(df_prior,"Property"))

var guessing = 1/bins.length;

var prevalenceModel = function(){

	var phi = uniform(0,1)

	foreach(properties, function(p){

		var propertyData = subset(df_prior, "Property", p)
		var categories = _.uniq(_.pluck(subset(df_truth, "Property", p), "Category"))
		// console.log(propertyData)

		foreach(categories, function(k){
			// console.log(k,p)
			var categoryData = _.pluck(subset(propertyData, "Category", k), "prevalence")
			var gamma = uniform(0,1)
			var delta = uniform(0,20)


			var discreteBetaProbs = discretizeBeta(gamma, delta)
			var discreteBetaProbsNormalized = map(function(x){return x/sum(discreteBetaProbs)}, discreteBetaProbs)

			var scr = reduce(function(d, memo) {
								var x = Math.log(
										(phi*guessing) + 
										((1-phi) * 
											discreteBetaProbsNormalized[bins.indexOf(alignPrevalence(d))])
										)
							    return memo + x
								}, 0, categoryData)
			// console.log(scr)

			factor(scr)

			// for linking with truthJudgments.wppl
			query.add([k,p], avoidEnds(Math.round(gamma*10)/10))
			// for just doing inference over the prevalence 
			// query.add(["prevalence",p, k, "gamma"], gamma)
			// query.add(["prevalence",p, k, "delta"], delta)
		})
	})
	
	// for just doing inference over the prevalence 
	// query.add(["prevalence","na", "na", "phi"], phi)
	return query
}

// for just doing inference 
// var mhiter = 100000
// var resultsERP = IncrementalMH(prevalenceModel, mhiter, {verbose:"true"})
// var outfile = '../model-results/generics-naturalPrevalence-incrMH'+mhiter+'a.csv'
// naturalUtils.erpWriter(resultsERP, outfile)
// console.log('wrote to... ' + outfile)
// console.log(df_truth)


