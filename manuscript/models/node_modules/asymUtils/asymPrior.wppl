// webppl asymPrior.wppl --require-js ./asymUtils.js 

var fpath = "/Users/mht/Documents/research/generics/manuscript/"
var Priordata = asymUtils.readCSV(fpath+"data/asymmetry-prior-4splitAccidental-trials.csv").data

var df = dataFrame(Priordata.slice(0,Priordata.length-1))
var conditions = _.uniq(_.pluck(df,"type"))

var priorModel = function(){

	var phi = uniform(0,1)

	foreach(conditions,
		function(c){

			var conditionData = subset(df, "type", c)
			// console.log(c)
			// foreach(["response0","response1"],
			// 	function(r){

			var gamma_across = uniform(0,1)
			var delta_across = uniform(0,50)

			var scr1 = reduce(function(dataPoint, memo) {
							    return memo + Math.log(
							    					(phi*Math.exp(betaERP.score([1,1],avoidEnds(dataPoint))) +
							    			 		(1-phi)* Math.exp(betaERP.score([
																	shape_alpha(gamma_across,delta_across),
																	shape_beta(gamma_across,delta_across)
																	], avoidEnds(dataPoint)))
							    			 		))
								}, 0, _.pluck(conditionData,"response0"))
			// console.log(scr1)
			factor(scr1)

			var gamma_within = uniform(0,1)
			var delta_within = uniform(0,50)

			var scr2 = reduce(function(dataPoint, memo) {
					    return memo + Math.log(
					    					(phi*Math.exp(betaERP.score([1,1],avoidEnds(dataPoint))) +
					    			 		(1-phi)* Math.exp(betaERP.score([
															shape_alpha(gamma_within,delta_within),
															shape_beta(gamma_within,delta_within)
															], avoidEnds(dataPoint)))
					    			 		))
					}, 0, _.pluck(conditionData,"response1"))

			// console.log(scr2)
			factor(scr2)

//			query.add(r, [gamma, delta])
			// query.add([c,r,'gamma'], gamma)
			// query.add([c,r,'delta'], delta)
			var discretized_prevalence = discretizedPriorModel(gamma_across, delta_across, gamma_within, delta_within)
			query.add(c, discretized_prevalence)
	})

	// query.add(["na","na","phi"], phi)

	return query
}





  // var heirarchicalERP = IncrementalMH(function(){return priorModel(key)}, 1000)
// var mhiter = 50000
// var heirarchicalERP = IncrementalMH(priorModel, mhiter, {"verbose":true})
// var outfile = "results/generics-asym-prior-incrmh"+mhiter+".csv"

// // var outfile = "results/priorERP-incrmh1000_"+key+".csv"
// asymUtils.erpWriter(heirarchicalERP, outfile)
// console.log("prior written to " +outfile)